#  -----------------------------------------------------------------------------
#
#  This file is part of the ParaNut project.
#
#  Copyright (C) 2019-2021 Alexander Bahle <alexander.bahle@hs-augsburg.de>
#                          Michael Schaeferling <michael.schaeferling@hs-augsburg.de>
#      Hochschule Augsburg, University of Applied Sciences
#
#  Description:
#    Main Makefile for the ParaNut demo system.
#
#  --------------------- LICENSE -----------------------------------------------
#  Redistribution and use in source and binary forms, with or without modification,
#  are permitted provided that the following conditions are met:
#
#  1. Redistributions of source code must retain the above copyright notice, this
#     list of conditions and the following disclaimer.
#
#  2. Redistributions in binary form must reproduce the above copyright notice,
#     this list of conditions and the following disclaimer in the documentation and/or
#     other materials provided with the distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
#  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
#  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
#  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
#  ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
#  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
#  ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#  -----------------------------------------------------------------------------


# Set the board here (see folders in hardware/boards for valid options)
BOARD?=zybo

# Directory generated by 'pn-newproject'
PARANUT ?= paranut

DIR_VIVADO_CORES=vivado_cores
DIR_HW_BIN=$(PARANUT)/hw/bin

SOFTWARE_SRC?=hello_newlib

# The lazy target:
# Do everything automatically, no more interaction needed.
# Just make sure to connect the board, as it will be programmed right after hardware and software are built.
.PHONY: all
all: build

.PHONY: software
software: software/Makefile

software/Makefile: $(PARANUT)
	# As SOFTWARE_SRC is not installed by pn-newproject, we need to abtain it from the source tree or the installation:
	# a) get the SOFTWARE_SRC from the source tree:
	@if [ -d $(PARANUT_TOOLS)/../sw/$(SOFTWARE_SRC) ]; then cp -r $(PARANUT_TOOLS)/../sw/$(SOFTWARE_SRC)/* software/; fi
	# b) get the SOFTWARE_SRC from the installation:
	@if [ -d $(PARANUT_TOOLS)/../src/sw/$(SOFTWARE_SRC) ]; then cp -r $(PARANUT_TOOLS)/../src/sw/$(SOFTWARE_SRC)/* software/; fi
	# Fix PARANUT after copy
	sed -i "s!PARANUT.*=.*!PARANUT ?= ../$(PARANUT)!" software/Makefile

# Generate new ParaNut project
$(PARANUT):
	pn-newproject -c $(PARANUT)

# Generate the PARANUT IP core for Xilinx Vivado
.PHONY: paranut_core
paranut_core: $(PARANUT)
	# Remove old PARANUT core and create folder
	rm -rf ${DIR_VIVADO_CORES}/PARANUT
	mkdir -p ${DIR_VIVADO_CORES}
	# Copy configuration to top-level if necessary
	diff -q hardware/boards/$(BOARD)/config.mk $(PARANUT)/config.mk > /dev/null 2>&1 || cp -f hardware/boards/$(BOARD)/config.mk $(PARANUT)/config.mk
	# Genearate IP core
	+$(MAKE) -C $(PARANUT) build-ip-xilinx IP_XILINX_TARGET_DIR=$(abspath $(DIR_VIVADO_CORES)/PARANUT)


# Generate and build the system (hardware + software):
.PHONY: build_system
build_system:
	$(MAKE) -C hardware BOARD=${BOARD} all
	+$(MAKE) -C software all


# Run the demo on the board:
.PHONY: run
run:
	+$(MAKE) -C software flash-bit PN_SYSTEM_BIT=$(abspath hardware/build/system.bit) PN_SYSTEM_HDF=$(abspath hardware/build/system.hdf) \
	                               PN_FIRMWARE_ELF=$(abspath hardware/firmware/firmware.elf)


.PHONY: build_and_run
build_and_run: software
	+$(MAKE) paranut_core
	+$(MAKE) build_system
	+$(MAKE) run

.PHONY: build
build: software
	+$(MAKE) paranut_core
	+$(MAKE) build_system


.PHONY: install
install:
	#Nothing to do here


.PHONY: clean
clean:
	# clean vivado_cores and demo software:
	rm -rf ${DIR_VIVADO_CORES}
	rm -rf $(PARANUT)
	$(MAKE) -C hardware clean BOARD=${BOARD}
	# clean software:
	if [ -f software/Makefile ]; then $(MAKE) -C software clean; fi

# Clean everything (be careful!)
.PHONY: veryclean
veryclean: clean clean-software

# Remove copied software
.PHONY: clean-software
clean-software:
	find software -not -name "software" -not -name 'README' -delete
